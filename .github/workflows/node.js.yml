# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test

  release_exe:
    name: Release exe
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Run install
        uses: borales/actions-yarn@v4
        with:
          cmd: install # will run `yarn install` command

      - name: Build production bundle
        uses: borales/actions-yarn@v4
        with:
          cmd: package

      - name: Build production bundle
        uses: borales/actions-yarn@v4
        with:
          cmd: electron:win:zip

      - name: Building the installer
        run: |
          "%programfiles(x86)%\Inno Setup 6\iscc.exe" "scripts\innoscript.iss"
        shell: cmd
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: Test_Setup.exe
          path: 'scripts\Output\Test_Setup.exe'

  release:
    runs-on: ${{ matrix.os }}

      strategy:
        matrix:
          os: [macos-latest, ubuntu-latest, windows-latest]

      steps:
        - name: Check out Git repository
          uses: actions/checkout@v1

        - name: Install Node.js, NPM and Yarn
          uses: actions/setup-node@v1
          with:
            node-version: 10

        - name: Build/release Electron app
          uses: samuelmeuli/action-electron-builder@v1
          with:
            # GitHub token, automatically provided to the action
            # (No need to define this secret in the repo settings)
            github_token: ${{ secrets.github_token }}

            # If the commit is tagged with a version (e.g. "v1.0.0"),
            # release the app after building
            release: ${{ startsWith(github.ref, 'refs/tags/v') }}
            args: "--x64 -w"
